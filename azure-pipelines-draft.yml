name: $(Build.BuildId)

trigger:
  branches:
    include: 
      - drafts

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  gh_user: nielsklazenga
  gh_organization: hiscom
  gh_repo: avh.chah.org.au
  gh_pass: $(github_token)
  gh_email: Niels.Klazenga@rbg.vic.gov.au
  gh_auth_header: $(echo -n "${gh_user}:$(github_token)" | base64);

steps:
- checkout: none 
  persistCredentials: false 

# 1. Setup our local repository and branch that we can work on
- script: git clone https://$(github_token)@github.com/$(gh_organization)/$(gh_repo).git .
  workingDirectory: $(Build.StagingDirectory)
  displayName: "[Git] Clone GitHub Pages Repository"

- script: |
    git config user.email $(gh_email)
    git config user.name $(gh_user)
  workingDirectory: $(Build.StagingDirectory)
  displayName: '[Git] Configure User'

# 2. Configure Ruby
- task: UseRubyVersion@0
  displayName: '[Ruby] Use Ruby >= 2.5'

# 3. Build Site
- script: 'git checkout drafts'
  workingDirectory: $(Build.StagingDirectory)
  displayName: '[Git] Switch to drafts branch for $(Build.StagingDirectory)'

- script: |
    mkdir /tmp/source
    cp -R * /tmp/source
    rm -rf /tmp/source/.git
  workingDirectory: $(Build.StagingDirectory)
  displayName: '[Script] Copy file from development branch to /tmp/source'

- script: 'git checkout gh-pages'
  workingDirectory: $(Build.StagingDirectory)
  displayName: '[Git] Switch to master branch for $(Build.StagingDirectory)'

- script: 'gem install bundler'
  workingDirectory: /tmp/source
  displayName: '[Jekyll] Install Bundler'

- script: |
    ls -la;
    bundle install
  workingDirectory: /tmp/source
  displayName: '[Jekyll] Install Jekyll and Dependencies'

- script: |
    mkdir /tmp/build;
    bundle exec jekyll build -d /tmp/build -b "/avh.chah.org.au";
  workingDirectory: /tmp/source
  displayName: '[Jekyll] Build Jekyll Static Site from /tmp/source to /tmp/build'

- script: |
    cp -R $(Build.StagingDirectory)/.git /tmp/build;
    rm -rf $(Build.StagingDirectory)/*;
    cp -R /tmp/build/* $(Build.StagingDirectory);
  workingDirectory: /tmp/build
  displayName: '[Script] Remove all files in $(Build.StagingDirectory) except .git/ and add files from /tmp/build'

# 3. Create our commit, merge into master, delete draft branch and push it
- script: |
    git add --all;
    git commit -m"Pipelines-Bot: Updated site via $(Build.SourceVersion)";
  workingDirectory: $(Build.StagingDirectory)
  displayName: '[Git] Creating commit'

- script: |
    git push origin gh-pages;
  workingDirectory: $(Build.StagingDirectory)
  displayName: '[Git] Push changes to remote'

- script: |
    curl https://api.github.com/repos/$(gh_organization)/$(gh_repo)/pages/builds/latest -i -v \
    -X GET \
    -H "Accept: application/vnd.github.mister-fantastic-preview+json" \
    -H "Authorization: Basic $(gh_auth_header)"
  displayName: '[GitHub] Get Page Build Status'